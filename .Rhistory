return(vector.no.digits)
}
RemoveDigits(c("INFO 201", "CSE 142"))
RemoveDigits <- function(vector.of.strings) {
vector.no.digits <- gsub('[0-9]]','',vector.of.strings)
return(vector.no.digits)
}
RemoveDigits(c("INFO 201", "CSE 142"))
help(agrep)
help(regex)
help(regex)
RemoveDigits <- function(vector.of.strings) {
#vector.no.digits <- regex([:0-9:],vector.of.strings)
vector.no.digits <- str_extract_all(vector.of.strings, regex("[:digits:]", multiline = TRUE))
return(vector.no.digits)
}
RemoveDigits(c("INFO 201", "CSE 142"))
vector.no.digits <- str_extract_all(vector.of.strings, regex("[:digits:]"))
students <- c("Bob", "Mike","Jan","Mary","Shruti","Jaya")
major <- c("History","Law","Forestry","Math","Art","Classics")
year <- c("1","1","4","3","2","4")
data.frame(students,year,major)
group.one <- data.frame(students,year,major)
group.one
group.one <- data.frame(students,year,major, stringsAsFactors = FALSE)
the.students <- group.one$students
the.students
the.majors <- group.one$major
the.majors
the.years <- group.one$year
the.years
year <- c(1,1,4,3,2,4)
group.one <- data.frame(students,year,major, stringsAsFactors = FALSE)
the.years <- group.one$year
the.years
nrow(group.one)
ncol(group.one)
dim(group.one)
colnames(group.one)
rownames(group.one)
head(group.one)
tail(group.one)
View(group.one)
new.col.names <- c("Name","Class Standing","Subject of Study")
colnames(group.one) <- new.col.names
group.one
group.one[row.num, col.num]
group.one[1,3]
group.one[1,Class Standing]
group.one[1,"Class Standing"]
group.one["Shruti","Subject of Study"]
group.one["Shruti",2]
group.one[5,"Subject of Study"]
group.one[,"Subject of Study"]
group.one[1,]
group.one[1:5,]
group.one[,2:6]
group.one["Class Standing",2:6]
group.one[2:6, "Class Standing"]
group.one[group.one$`Class Standing` > 1]
group.one[group.one$`Class Standing` > 1,]
setwd("~/Desktop/INFO_201/FinalProject-Goodreads")
library("jsonlite")
library("httr")
library("tidytext")
library("dplyr")
library("stringr")
library("rvest")
library("wordcloud")
library("reshape2")
source("./api-key.R")
ReviewWords <- function(book.isbn, book.title) {
base.url <- 'http://api.nytimes.com/svc/books/v3/reviews.json'
query.params <- list(isbn = book.isbn, title = book.title,  api_key = yogasaikey)
response <- GET(base.url, query = query.params)
body <- content(response, "text")
results <- fromJSON(body)
book.reviews <- flatten(results$results)
url <- book.reviews$url[1]
page <- read_html(url)
# Extract review text from webpage
review.content <- page %>% html_nodes('.story-body-text') %>% html_text()
# Create review text dataframe
dfcontent <- data.frame(review.content, stringsAsFactors = FALSE)
# Create tidytext structure of all words in review
all.words <- dfcontent %>% unnest_tokens(word, review.content)
# Get all word counts
word.count <- all.words %>%
group_by(word) %>%
summarize(count = n()) %>%
arrange(-count)
# Remove stop words
content.words <- word.count %>%
anti_join(stop_words, by="word")
# Get content word counts -- arrange content.words by descending count
content.count <- content.words %>%
arrange(-count)
return(content.count)
}
reviewdata <- ReviewWords("978-0375842207", "The Book Thief")
NegativeCloud <- function(reviewdata) {
# Get negative words in "nrc" Lexicon
nrc.neg <- get_sentiments("nrc") %>%
filter(sentiment == "negative")
# Count the negative words in the review data
neg.words <- reviewdata %>%
inner_join(nrc.neg, by ="word")
# Create the negative word cloud
ncloud <- wordcloud(neg.words$word, neg.words$count, scale = c(3,.5), min.freq = 1, max.words = Inf, random.order = TRUE, colors = "#C40500")
return(ncloud)
}
negative.cloud <- NegativeCloud(reviewdata)
# Get wordcloud with positive words in review
PositiveCloud <- function(reviewdata) {
# Get positive words in "nrc" Lexicon
nrc.pos <- get_sentiments("nrc") %>%
filter(sentiment == "positive")
# Count the positive words in the review data
pos.words <- reviewdata %>%
inner_join(nrc.pos, by ="word")
# Create the positive word cloud
pcloud <- wordcloud(pos.words$word, pos.words$count, scale = c(3,.5), min.freq = 1, max.words = Inf,
random.order = TRUE, colors = "#00BFC4")
return(pcloud)
}
positive.cloud <- PositiveCloud(reviewdata)
server <- function(input, output) {
output$negplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
negative.cloud <- NegativeCloud(reviewdata)
})
output$posplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
positive.cloud <- PositiveCloud(reviewdata)
})
}
ui <- fluidPage(
headerPanel("Reviews"),
sidebarPanel(
textInput("title", label = h3("Title"), value = "The Book Thief"),
textInput("isbn", label = h3("ISBN"), value = "978-0375842207"),
hr(),
fluidRow(column(3, verbatimTextOutput("value")))
),
mainPanel(
fluidRow(
splitLayout(plotOutput("negplot"), plotOutput("posplot"))
)
)
)
library(shiny)
server <- function(input, output) {
output$negplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
negative.cloud <- NegativeCloud(reviewdata)
})
output$posplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
positive.cloud <- PositiveCloud(reviewdata)
})
}
ui <- fluidPage(
headerPanel("Reviews"),
sidebarPanel(
textInput("title", label = h3("Title"), value = "The Book Thief"),
textInput("isbn", label = h3("ISBN"), value = "978-0375842207"),
hr(),
fluidRow(column(3, verbatimTextOutput("value")))
),
mainPanel(
fluidRow(
splitLayout(plotOutput("negplot"), plotOutput("posplot"))
)
)
)
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$negplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
negative.cloud <- NegativeCloud(reviewdata)
})
output$posplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
positive.cloud <- PositiveCloud(reviewdata)
})
}
ui <- fluidPage(
headerPanel("Reviews"),
sidebarPanel(
textInput("title", label = h3("Title"), value = "The Book Thief"),
textInput("isbn", label = h3("ISBN"), value = "978-0375842207"),
hr(),
fluidRow(column(3, verbatimTextOutput("value")))
),
mainPanel(
fluidRow(
column(6,plotOutput(outputId="plotgraph1", width="300px",height="300px")),
column(6,plotOutput(outputId="plotgraph2", width="300px",height="300px"))
)
)
)
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$negplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
negative.cloud <- NegativeCloud(reviewdata)
})
output$posplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
positive.cloud <- PositiveCloud(reviewdata)
})
}
ui <- fluidPage(
headerPanel("Reviews"),
sidebarPanel(
textInput("title", label = h3("Title"), value = "The Book Thief"),
textInput("isbn", label = h3("ISBN"), value = "978-0375842207"),
hr(),
fluidRow(column(3, verbatimTextOutput("value")))
),
mainPanel(
fluidRow(
column(6,plotOutput(outputId="plotgraph1", width="300px",height="300px")),
column(6,plotOutput(outputId="plotgraph2", width="300px",height="300px"))
)
)
)
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$negplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
negative.cloud <- NegativeCloud(reviewdata)
})
output$posplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
positive.cloud <- PositiveCloud(reviewdata)
})
}
ui <- fluidPage(
headerPanel("Reviews"),
sidebarPanel(
textInput("title", label = h3("Title"), value = "The Book Thief"),
textInput("isbn", label = h3("ISBN"), value = "978-0375842207"),
hr(),
fluidRow(column(3, verbatimTextOutput("value")))
),
mainPanel(
fluidRow(
splitLayout(plotOutput("negplot"), plotOutput("posplot"))
)
)
)
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$negplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
negative.cloud <- NegativeCloud(reviewdata)
})
output$posplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
positive.cloud <- PositiveCloud(reviewdata)
})
}
ui <- fluidPage(
headerPanel("Reviews"),
sidebarPanel(
textInput("title", label = h3("Title"), value = "The Book Thief"),
textInput("isbn", label = h3("ISBN"), value = "978-0375842207"),
hr(),
fluidRow(column(3, verbatimTextOutput("value")))
),
mainPanel(
fluidRow(
splitLayout(plotOutput("negplot"), plotOutput("posplot"))
)
)
)
shinyApp(ui = ui, server = server)
setwd("~/Desktop/INFO_201/FinalProject-Goodreads")
library("jsonlite")
library("httr")
library("tidytext")
library("dplyr")
library("stringr")
library("rvest")
library("wordcloud")
library("reshape2")
source("./api-key.R")
ReviewWords <- function(book.isbn, book.title) {
base.url <- 'http://api.nytimes.com/svc/books/v3/reviews.json'
query.params <- list(isbn = book.isbn, title = book.title,  api_key = yogasaikey)
response <- GET(base.url, query = query.params)
body <- content(response, "text")
results <- fromJSON(body)
book.reviews <- flatten(results$results)
url <- book.reviews$url[1]
page <- read_html(url)
# Extract review text from webpage
review.content <- page %>% html_nodes('.story-body-text') %>% html_text()
# Create review text dataframe
dfcontent <- data.frame(review.content, stringsAsFactors = FALSE)
# Create tidytext structure of all words in review
all.words <- dfcontent %>% unnest_tokens(word, review.content)
# Get all word counts
word.count <- all.words %>%
group_by(word) %>%
summarize(count = n()) %>%
arrange(-count)
# Remove stop words
content.words <- word.count %>%
anti_join(stop_words, by="word")
# Get content word counts -- arrange content.words by descending count
content.count <- content.words %>%
arrange(-count)
return(content.count)
}
reviewdata <- ReviewWords("978-0375842207", "The Book Thief")
NegativeCloud <- function(reviewdata) {
# Get negative words in "nrc" Lexicon
nrc.neg <- get_sentiments("nrc") %>%
filter(sentiment == "negative")
# Count the negative words in the review data
neg.words <- reviewdata %>%
inner_join(nrc.neg, by ="word")
# Create the negative word cloud
ncloud <- wordcloud(neg.words$word, neg.words$count, scale = c(4,.5), min.freq = 1, max.words = Inf, random.order = TRUE, colors = "#C40500")
return(ncloud)
}
negative.cloud <- NegativeCloud(reviewdata)
# Get wordcloud with positive words in review
PositiveCloud <- function(reviewdata) {
# Get positive words in "nrc" Lexicon
nrc.pos <- get_sentiments("nrc") %>%
filter(sentiment == "positive")
# Count the positive words in the review data
pos.words <- reviewdata %>%
inner_join(nrc.pos, by ="word")
# Create the positive word cloud
pcloud <- wordcloud(pos.words$word, pos.words$count, scale = c(4,.5), min.freq = 1, max.words = Inf,
random.order = TRUE, colors = "#00BFC4")
return(pcloud)
}
positive.cloud <- PositiveCloud(reviewdata)
server <- function(input, output) {
output$negplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
negative.cloud <- NegativeCloud(reviewdata)
})
output$posplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
positive.cloud <- PositiveCloud(reviewdata)
})
}
ui <- fluidPage(
headerPanel("Reviews"),
sidebarPanel(
textInput("title", label = h3("Title"), value = "The Book Thief"),
textInput("isbn", label = h3("ISBN"), value = "978-0375842207"),
hr(),
fluidRow(column(3, verbatimTextOutput("value")))
),
mainPanel(
fluidRow(
splitLayout(plotOutput("negplot"), plotOutput("posplot"))
)
)
)
shinyApp(ui = ui, server = server)
library(shiny)
library(jsonlite)
library(dplyr)
library(ggplot2)
source("author.R")
source("publisher.R")
source('price.R')
source("review.R")
shinyServer(function(input, output) {
output$yiranPlot <-renderPlotly({
UserCombinedInfo(input$dates[1],input$dates[2])
})
output$plot <- renderPlot({
if (input$category == 'authors') {
author.table <- author.data(input$date)
n = nrow(author.table)
par(mar=c(0,6,2,2)+0.1)
xx <- barplot(author.table$Weeks,
main = "NY Times Bestsellers",
xlab = "Authors",
ylab = "Weeks on NY Times Bestsellers List",
legend.text = author.table$Authors,
args.legend = (list(x ='topright', bty='n', inset=c(0.12,0))),
col = rainbow(n))
text(x = xx, y = 2,
label = author.table$Weeks,
pos = 3,
cex = 1.25,
col = "black")
} else {
publisher.table <- getPublisherInfo(input$date)
n = 10
par(mar=c(0,6,2,2)+0.1)
xx <- barplot(publisher.table$weeks_on_list,
main = "NY Times Bestsellers",
xlab = "Publishers",
ylab = "Weeks on NY Times Bestsellers List",
legend.text = publisher.table$publisher,
args.legend = (list(x = 'topright', bty = 'n', inset = c(0.12,0))),
col = rainbow(n))
text(x = xx, y = 2,
label = publisher.table$weeks_on_list,
pos = 3,
cex = 1.25,
col = "black")
}
})
output$negplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
negative.cloud <- NegativeCloud(reviewdata)
})
output$posplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
positive.cloud <- PositiveCloud(reviewdata)
})
})
library(shiny)
library(plotly)
# Define UI for application that draws a histogram
shinyUI(fluidPage(
navbarPage("NYT Books!",
tabPanel("Yiran",
titlePanel("Price and Popularity Scatter Plot"),
sidebarLayout(
sidebarPanel(
dateRangeInput("dates",
label = h3("Date range"),
start="2008-06-02",
end=(Sys.Date()-77)),
hr(),
fluidRow(column(4, verbatimTextOutput("value")))
),
mainPanel(
plotlyOutput("yiranPlot")
)
)
),
tabPanel("Kim",
# Application title
titlePanel("Top 10 Bestsellers"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
selectInput('category', "Choose to see authors or publishers:",
choices = list("Authors" = "authors",
"Publishers" = "publishers")),
dateInput('date',
label = 'Choose a NYT Times BestSellers List Date:',
value = Sys.Date()
)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput('plot')
)
)
),
tabPanel("Reviews",
# Application title
titlePanel("Positive/Negative Words in Review"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
textInput("title", label = h3("Title"), value = "The Book Thief"),
textInput("isbn", label = h3("ISBN"), value = "978-0375842207"),
hr(),
fluidRow(column(3, verbatimTextOutput("value")))
),
# Show a plot of the generated distribution
mainPanel(
fluidRow(
splitLayout(plotOutput("negplot"), plotOutput("posplot"))
)
)
)
)
)
))
runApp()
server <- function(input, output) {
output$negplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
negative.cloud <- NegativeCloud(reviewdata)
})
output$posplot <- renderPlot({
reviewdata <- ReviewWords(input$isbn, input$title)
positive.cloud <- PositiveCloud(reviewdata)
})
}
ui <- fluidPage(
headerPanel("Reviews"),
sidebarPanel(
textInput("title", label = h3("Title"), value = "The Book Thief"),
textInput("isbn", label = h3("ISBN"), value = "978-0375842207"),
hr(),
fluidRow(column(3, verbatimTextOutput("value")))
),
mainPanel(
fluidRow(
splitLayout(cellHeights = c("50%", "50%"), plotOutput("negplot"), plotOutput("posplot"))
)
)
)
shinyApp(ui = ui, server = server)
